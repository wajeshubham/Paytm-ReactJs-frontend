[{"C:\\Users\\shubham\\Desktop\\PayTm_Django_ReactJs\\paytm_frontend\\src\\index.js":"1","C:\\Users\\shubham\\Desktop\\PayTm_Django_ReactJs\\paytm_frontend\\src\\App.js":"2","C:\\Users\\shubham\\Desktop\\PayTm_Django_ReactJs\\paytm_frontend\\src\\serviceWorker.js":"3","C:\\Users\\shubham\\Desktop\\PayTm_Django_ReactJs\\paytm_frontend\\src\\server.js":"4"},{"size":503,"mtime":499162500000,"results":"5","hashOfConfig":"6"},{"size":4337,"mtime":1611996887843,"results":"7","hashOfConfig":"6"},{"size":5086,"mtime":499162500000,"results":"8","hashOfConfig":"6"},{"size":48,"mtime":1611863980392,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"ssbv1w",{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"12"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"C:\\Users\\shubham\\Desktop\\PayTm_Django_ReactJs\\paytm_frontend\\src\\index.js",[],["21","22"],"C:\\Users\\shubham\\Desktop\\PayTm_Django_ReactJs\\paytm_frontend\\src\\App.js",["23"],"import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Axios from \"axios\";\nimport { server } from \"./server\";\n\nconst App = () => {\n  const [name, setName] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n\n  const handleSuccess = (res) => {\n    // separate key and values from the res object which is nothing but param_dict\n    let keyArr = Object.keys(res);\n    let valArr = Object.values(res);\n\n    // when we start the payment verification we will hide our Product form\n    document.getElementById(\"paymentFrm\").style.display = \"none\";\n\n    // Lets create a form by DOM manipulation\n\n    // display messages as soon as payment starts\n    let heading1 = document.createElement(\"h1\");\n    heading1.innerText = \"Redirecting you to the paytm....\";\n    let heading2 = document.createElement(\"h1\");\n    heading2.innerText = \"Please do not refresh your page....\";\n\n    //create a form that will send necessary details to the paytm\n    let frm = document.createElement(\"form\");\n    frm.action = \"https://securegw-stage.paytm.in/order/process/\";\n    frm.method = \"post\";\n    frm.name = \"paytmForm\";\n\n    // we have to pass all the credentials that we've got from param_dict\n    keyArr.map((k, i) => {\n      // create an input element\n      let inp = document.createElement(\"input\");\n      inp.key = i;\n      inp.type = \"hidden\";\n      // input tag's name should be a key of param_dict\n      inp.name = k;\n      // input tag's value should be a value of key that we are passing in inp.name\n      inp.value = valArr[i];\n      // append those all input tags in the form tag\n      frm.appendChild(inp);\n      // we will submit this form with all the credentials present in param_dict\n    });\n\n    // append all the above tags to the body tag\n    document.body.appendChild(heading1);\n    document.body.appendChild(heading2);\n    document.body.appendChild(frm);\n    // finally submit that form with all the inpput tags to get a confirmation from the paytm\n    frm.submit();\n\n    // if you remember, the param_dict also has \"'CALLBACK_URL': 'http://127.0.0.1:8000/api/handlepayment/'\"\n    // so as soon as paytm get the payment it will hit that callback url with some response and\n    // on the basis of that response we are displaying the payment successfull or failed message at the backend\n  };\n\n  const fetchRes = async () => {\n    let bodyData = new FormData();\n\n    // we will pass the amount and product name to the backend using form data\n    bodyData.append(\"amount\", amount);\n    bodyData.append(\"name\", name);\n    bodyData.append(\"email\", email);\n\n    await Axios({\n      url: `${server}/api/pay/`,\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      data: bodyData,\n    }).then((res) => {\n      // we will retreive the param_dict which we are\n      // passing from the backend with all the necessary credentials\n      // and we will pass it to handleSuccess() func to send it to the paytm\n      if (res) {\n        handleSuccess(res.data.param_dict);\n      }\n    });\n  };\n\n  return (\n    <div id=\"paymentFrm\" className=\"container\" style={{ marginTop: \"20vh\" }}>\n      <form>\n        <h1>Payment page</h1>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"name\">Product name</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"name\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"exampleInputPassword1\">Amount</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"amount\"\n            value={amount}\n            onChange={(e) => setAmount(e.target.value)}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"exampleInputPassword1\">Email</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n        </div>\n      </form>\n      <button onClick={fetchRes} className=\"btn btn-primary btn-block\">\n        Pay with PayTm\n      </button>\n    </div>\n  );\n};\n\nexport default App;\n","C:\\Users\\shubham\\Desktop\\PayTm_Django_ReactJs\\paytm_frontend\\src\\serviceWorker.js",[],"C:\\Users\\shubham\\Desktop\\PayTm_Django_ReactJs\\paytm_frontend\\src\\server.js",[],["24","25"],{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","severity":1,"message":"31","line":34,"column":23,"nodeType":"32","messageId":"33","endLine":34,"endColumn":25},{"ruleId":"26","replacedBy":"34"},{"ruleId":"28","replacedBy":"35"},"no-native-reassign",["36"],"no-negated-in-lhs",["37"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["36"],["37"],"no-global-assign","no-unsafe-negation"]